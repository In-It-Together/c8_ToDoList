{"ast":null,"code":"var _jsxFileName = \"/Users/josephavila/Development/init-together/c6_useRef/src/ToDoList.js\";\nimport React, { useState } from 'react';\nimport InputBox from './InputBox';\nimport ToDoGrid from './ToDoGrid';\nimport ToggleMessage from './ToggleMessage';\n\nconst ToDoList = () => {\n  const initialState = {\n    \"2020-08-20\": [{\n      description: \"Play Soccer\",\n      isCompleted: false\n    }, {\n      description: \"Eat dinner\",\n      isCompleted: true\n    }],\n    \"2020-08-10\": [{\n      description: \"Covid Testing\",\n      isCompleted: false\n    }]\n  };\n  const [listState, setListState] = useState(initialState);\n\n  const onAddTask = (date, toDo) => {\n    const stateCopy = { ...listState\n    };\n\n    if (stateCopy[date]) {\n      stateCopy[date].push(toDo);\n    } else {\n      stateCopy[date] = [toDo];\n    }\n\n    ;\n    setListState(stateCopy);\n  };\n\n  const completeTask = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBox, {\n    onAddTask: onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), Object.keys(listState).length === 0 ? /*#__PURE__*/React.createElement(ToggleMessage, {\n    message: \"Your calendar is empty!\",\n    isOn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 52\n    }\n  }) : /*#__PURE__*/React.createElement(ToDoGrid, {\n    listState: listState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/josephavila/Development/init-together/c6_useRef/src/ToDoList.js"],"names":["React","useState","InputBox","ToDoGrid","ToggleMessage","ToDoList","initialState","description","isCompleted","listState","setListState","onAddTask","date","toDo","stateCopy","push","completeTask","Object","keys","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAGnB,QAAMC,YAAY,GAAG;AACjB,kBAAc,CAAC;AAACC,MAAAA,WAAW,EAAE,aAAd;AAA6BC,MAAAA,WAAW,EAAE;AAA1C,KAAD,EACd;AAACD,MAAAA,WAAW,EAAE,YAAd;AAA4BC,MAAAA,WAAW,EAAE;AAAzC,KADc,CADG;AAGjB,kBAAc,CAAC;AAACD,MAAAA,WAAW,EAAE,eAAd;AAA+BC,MAAAA,WAAW,EAAE;AAA5C,KAAD;AAHG,GAArB;AAMA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BT,QAAQ,CAACK,YAAD,CAA5C;;AAEA,QAAMK,SAAS,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAE9B,UAAMC,SAAS,GAAG,EAAC,GAAGL;AAAJ,KAAlB;;AAEA,QAAIK,SAAS,CAACF,IAAD,CAAb,EAAqB;AACjBE,MAAAA,SAAS,CAACF,IAAD,CAAT,CAAgBG,IAAhB,CAAqBF,IAArB;AACH,KAFD,MAEO;AACHC,MAAAA,SAAS,CAACF,IAAD,CAAT,GAAkB,CAACC,IAAD,CAAlB;AACH;;AAAA;AAEDH,IAAAA,YAAY,CAACI,SAAD,CAAZ;AACH,GAXD;;AAaA,QAAME,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEL,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKM,MAAM,CAACC,IAAP,CAAYT,SAAZ,EAAuBU,MAAvB,KAAkC,CAAlC,gBAAsC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAC,yBAAvB;AAAiD,IAAA,IAAI,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtC,gBACD,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEV,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CApCD;;AAsCA,eAAeJ,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport InputBox from './InputBox';\nimport ToDoGrid from './ToDoGrid';\nimport ToggleMessage from './ToggleMessage';\n\n\nconst ToDoList = () => {\n\n\n    const initialState = {\n        \"2020-08-20\": [{description: \"Play Soccer\", isCompleted: false}, \n        {description: \"Eat dinner\", isCompleted: true}], \n        \"2020-08-10\": [{description: \"Covid Testing\", isCompleted: false}]\n    }\n\n    const [ listState, setListState ] = useState(initialState);\n\n    const onAddTask = (date, toDo) => {\n\n        const stateCopy = {...listState};\n\n        if (stateCopy[date]) {\n            stateCopy[date].push(toDo);\n        } else {\n            stateCopy[date] = [toDo];\n        };\n\n        setListState(stateCopy);\n    };\n\n    const completeTask = () => {\n        \n    };\n\n\n    return (\n        <div>\n            <InputBox onAddTask={onAddTask} />\n            {Object.keys(listState).length === 0 ? <ToggleMessage message=\"Your calendar is empty!\" isOn={true} /> :  \n            <ToDoGrid listState={listState} />}\n        </div>\n    );\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}